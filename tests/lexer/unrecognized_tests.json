[
    {
        "test_name": "Single Unrecognized Character",
        "description": "Test single invalid character causes lexer error",
        "code": "@",
        "should_succeed": false,
        "expected_error": "Unrecognized character",
        "result": []
    },
    {
        "test_name": "Multiple Unrecognized Characters",
        "description": "Test multiple invalid characters cause lexer error",
        "code": "@#$%",
        "should_succeed": false,
        "expected_error": "Unrecognized characters",
        "result": []
    },
    {
        "test_name": "Mixed Valid and Invalid Characters",
        "description": "Test mixing valid tokens with unrecognized characters",
        "code": "subject#course",
        "should_succeed": false,
        "expected_error": "Unrecognized character",
        "result": []
    },
    {
        "test_name": "Invalid Characters with Spaces",
        "description": "Test invalid characters separated by spaces cause lexer error",
        "code": "@ # $ %",
        "should_succeed": false,
        "expected_error": "Unrecognized characters",
        "result": []
    },
    {
        "test_name": "Unicode Invalid Characters",
        "description": "Test unicode characters that cause lexer error",
        "code": "★☆♠♣",
        "should_succeed": false,
        "expected_error": "Unrecognized characters",
        "result": []
    },
    {
        "test_name": "Punctuation Overload", 
        "description": "Test excessive punctuation marks cause lexer error",
        "code": "~`^&*()[]{}|\\",
        "should_succeed": false,
        "expected_error": "Unrecognized characters",
        "result": []
    },
    {
        "test_name": "Invalid Operator Combination",
        "description": "Test invalid operator-like sequences",
        "code": "===",
        "result": [
            {"type": "T_EQUALS", "content": "="},
            {"type": "T_EQUALS", "content": "="},
            {"type": "T_EQUALS", "content": "="}
        ]
    },
    {
        "test_name": "Single Invalid in Valid Context",
        "description": "Test single invalid character among valid tokens causes lexer error",
        "code": "subject = @ course = \"CS\"",
        "should_succeed": false,
        "expected_error": "Unrecognized character",
        "result": []
    },
    {
        "test_name": "Valid Parentheses with Invalid Characters",
        "description": "Test valid parentheses mixed with invalid characters cause lexer error",
        "code": "(prof is Alan) @ (course contains CS)",
        "should_succeed": false,
        "expected_error": "Unrecognized character",
        "result": []
    }
] 