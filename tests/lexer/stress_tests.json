[
    {
        "test_name": "No Whitespace Between Tokens",
        "description": "Test tokens smashed together without spaces",
        "code": "subject=\"CS\"andcourse=\"101\"",
        "result": [
            {"type": "T_SUBJECT", "content": "subject"},
            {"type": "T_EQUALS", "content": "="},
            {"type": "T_STRING", "content": "\"CS\""},
            {"type": "T_IDENTIFIER", "content": "andcourse"},
            {"type": "T_EQUALS", "content": "="},
            {"type": "T_STRING", "content": "\"101\""}
        ]
    },
    {
        "test_name": "Operators Without Spaces",
        "description": "Test operators smashed together",
        "code": "credit hours>=3<=6!=5",
        "result": [
            {"type": "T_CREDIT", "content": "credit"},
            {"type": "T_HOURS", "content": "hours"},
            {"type": "T_GREATEREQUAL", "content": ">="},
            {"type": "T_INTEGER", "content": "3"},
            {"type": "T_LESSEQUAL", "content": "<="},
            {"type": "T_INTEGER", "content": "6"},
            {"type": "T_NOTEQUALS", "content": "!="},
            {"type": "T_INTEGER", "content": "5"}
        ]
    },
    {
        "test_name": "Mixed Symbols and Keywords",
        "description": "Test mixed valid and invalid symbols",
        "code": "prof@email.com<>campus",
        "should_succeed": false,
        "expected_error": "Unrecognized characters",
        "result": []
    },
    {
        "test_name": "All Day Abbreviations Smashed",
        "description": "Test day abbreviations without spaces",
        "code": "monfrisuedwethusatsun",
        "result": [
            {"type": "T_IDENTIFIER", "content": "monfrisuedwethusatsun"}
        ]
    },
    {
        "test_name": "Numbers and Letters Mixed",
        "description": "Test numbers directly adjacent to letters",
        "code": "course123hours456credit789",
        "result": [
            {"type": "T_IDENTIFIER", "content": "course123hours456credit789"}
        ]
    },
    {
        "test_name": "Parentheses Without Spaces",
        "description": "Test parentheses expressions without spaces",
        "code": "(prof=Alan)and(course=CS)or(subject=Math)",
        "result": [
            {"type": "T_LEFTPAREN", "content": "("},
            {"type": "T_PROF", "content": "prof"},
            {"type": "T_EQUALS", "content": "="},
            {"type": "T_IDENTIFIER", "content": "Alan"},
            {"type": "T_RIGHTPAREN", "content": ")"},
            {"type": "T_AND", "content": "and"},
            {"type": "T_LEFTPAREN", "content": "("},
            {"type": "T_COURSE", "content": "course"},
            {"type": "T_EQUALS", "content": "="},
            {"type": "T_IDENTIFIER", "content": "CS"},
            {"type": "T_RIGHTPAREN", "content": ")"},
            {"type": "T_OR", "content": "or"},
            {"type": "T_LEFTPAREN", "content": "("},
            {"type": "T_SUBJECT", "content": "subject"},
            {"type": "T_EQUALS", "content": "="},
            {"type": "T_IDENTIFIER", "content": "Math"},
            {"type": "T_RIGHTPAREN", "content": ")"}
        ]
    },
    {
        "test_name": "Deeply Nested Parentheses Stress",
        "description": "Test very deeply nested parentheses for stress testing",
        "code": "((((((prof=Alan))))))",
        "result": [
            {"type": "T_LEFTPAREN", "content": "("},
            {"type": "T_LEFTPAREN", "content": "("},
            {"type": "T_LEFTPAREN", "content": "("},
            {"type": "T_LEFTPAREN", "content": "("},
            {"type": "T_LEFTPAREN", "content": "("},
            {"type": "T_LEFTPAREN", "content": "("},
            {"type": "T_PROF", "content": "prof"},
            {"type": "T_EQUALS", "content": "="},
            {"type": "T_IDENTIFIER", "content": "Alan"},
            {"type": "T_RIGHTPAREN", "content": ")"},
            {"type": "T_RIGHTPAREN", "content": ")"},
            {"type": "T_RIGHTPAREN", "content": ")"},
            {"type": "T_RIGHTPAREN", "content": ")"},
            {"type": "T_RIGHTPAREN", "content": ")"},
            {"type": "T_RIGHTPAREN", "content": ")"}
        ]
    },
    {
        "test_name": "Complex Mixed Expression Stress",
        "description": "Test complex mixed expression with parentheses under stress",
        "code": "((subject=CS)and(credit>=3))or((prof=Alan)and(course=101))and((campus=Main)or(method=Online))",
        "result": [
            {"type": "T_LEFTPAREN", "content": "("},
            {"type": "T_LEFTPAREN", "content": "("},
            {"type": "T_SUBJECT", "content": "subject"},
            {"type": "T_EQUALS", "content": "="},
            {"type": "T_IDENTIFIER", "content": "CS"},
            {"type": "T_RIGHTPAREN", "content": ")"},
            {"type": "T_AND", "content": "and"},
            {"type": "T_LEFTPAREN", "content": "("},
            {"type": "T_CREDIT", "content": "credit"},
            {"type": "T_GREATEREQUAL", "content": ">="},
            {"type": "T_INTEGER", "content": "3"},
            {"type": "T_RIGHTPAREN", "content": ")"},
            {"type": "T_RIGHTPAREN", "content": ")"},
            {"type": "T_OR", "content": "or"},
            {"type": "T_LEFTPAREN", "content": "("},
            {"type": "T_LEFTPAREN", "content": "("},
            {"type": "T_PROF", "content": "prof"},
            {"type": "T_EQUALS", "content": "="},
            {"type": "T_IDENTIFIER", "content": "Alan"},
            {"type": "T_RIGHTPAREN", "content": ")"},
            {"type": "T_AND", "content": "and"},
            {"type": "T_LEFTPAREN", "content": "("},
            {"type": "T_COURSE", "content": "course"},
            {"type": "T_EQUALS", "content": "="},
            {"type": "T_INTEGER", "content": "101"},
            {"type": "T_RIGHTPAREN", "content": ")"},
            {"type": "T_RIGHTPAREN", "content": ")"},
            {"type": "T_AND", "content": "and"},
            {"type": "T_LEFTPAREN", "content": "("},
            {"type": "T_LEFTPAREN", "content": "("},
            {"type": "T_CAMPUS", "content": "campus"},
            {"type": "T_EQUALS", "content": "="},
            {"type": "T_IDENTIFIER", "content": "Main"},
            {"type": "T_RIGHTPAREN", "content": ")"},
            {"type": "T_OR", "content": "or"},
            {"type": "T_LEFTPAREN", "content": "("},
            {"type": "T_METHOD", "content": "method"},
            {"type": "T_EQUALS", "content": "="},
            {"type": "T_IDENTIFIER", "content": "Online"},
            {"type": "T_RIGHTPAREN", "content": ")"},
            {"type": "T_RIGHTPAREN", "content": ")"}
        ]
    },
    {
        "test_name": "Unrecognized Tokens in Quotes",
        "description": "Test that unrecognized characters inside quotes are treated as part of the string",
        "code": "title = \"CS@101\" and course = \"Data&Algorithms\"",
        "result": [
            {"type": "T_TITLE", "content": "title"},
            {"type": "T_EQUALS", "content": "="},
            {"type": "T_STRING", "content": "\"CS@101\""},
            {"type": "T_AND", "content": "and"},
            {"type": "T_COURSE", "content": "course"},
            {"type": "T_EQUALS", "content": "="},
            {"type": "T_STRING", "content": "\"Data&Algorithms\""}
        ]
    }
] 