[
  {
    "test_name": "missing_value",
    "description": "Query missing the value after 'is'",
    "input": "prof is",
    "should_succeed": false,
    "expected_error_type": "MissingToken",
    "expected_error_message": "Expected identifier",
    "expected_problematic_tokens": []
  },
  {
    "test_name": "missing_entity",
    "description": "Query missing the entity before 'is'",
    "input": "is Alan",
    "should_succeed": false,
    "expected_error_type": "UnexpectedToken",
    "expected_error_message": "T_IDENTIFIER (content: 'Alan')",
    "expected_problematic_tokens": [
      {
        "lexeme": "Alan",
        "start": 3,
        "end": 7
      }
    ]
  },
  {
    "test_name": "incomplete_and_clause",
    "description": "Query with incomplete AND clause",
    "input": "prof is Alan and",
    "should_succeed": false,
    "expected_error_type": "MissingToken",
    "expected_error_message": "Expected entity query keyword",
    "expected_problematic_tokens": []
  },
  {
    "test_name": "unclosed_parenthesis",
    "description": "Query with unclosed parenthesis",
    "input": "(prof is Alan",
    "should_succeed": false,
    "expected_error_type": "MissingToken",
    "expected_error_message": "Expected closing parenthesis",
    "expected_problematic_tokens": []
  },
  {
    "test_name": "invalid_field_for_entity",
    "description": "Query with invalid field for entity (email is not a valid field for prof)",
    "input": "prof email contains @university.edu",
    "should_succeed": false,
    "expected_error_type": "UnexpectedToken",
    "expected_error_message": "T_UNRECOGNIZED (content: '.')",
    "expected_problematic_tokens": [
      {
        "lexeme": ".",
        "start": 31,
        "end": 32
      }
    ]
  },
  {
    "test_name": "invalid_numeric_operator",
    "description": "Using string operator with numeric field",
    "input": "credit hours contains \"three\"",
    "should_succeed": false,
    "expected_error_type": "InvalidOperator",
    "expected_error_message": "T_CONTAINS",
    "expected_problematic_tokens": [
      {
        "lexeme": "contains",
        "start": 13,
        "end": 21
      }
    ]
  },
  {
    "test_name": "invalid_string_operator",
    "description": "Using numeric operator with string field",
    "input": "course > CS",
    "should_succeed": false,
    "expected_error_type": "InvalidOperator",
    "expected_error_message": ">",
    "expected_problematic_tokens": [
      {
        "lexeme": ">",
        "start": 7,
        "end": 8
      }
    ]
  },
  {
    "test_name": "malformed_day_query",
    "description": "Invalid day query with binary operator",
    "input": "monday > 5",
    "should_succeed": false,
    "expected_error_type": "InvalidOperator",
    "expected_error_message": ">",
    "expected_problematic_tokens": [
      {
        "lexeme": ">",
        "start": 7,
        "end": 8
      }
    ]
  },
  {
    "test_name": "empty_query",
    "description": "Completely empty query",
    "input": "",
    "should_succeed": false,
    "expected_error_type": "EmptyQuery",
    "expected_error_message": null,
    "expected_problematic_tokens": []
  },
  {
    "test_name": "whitespace_only",
    "description": "Query with only whitespace",
    "input": "   ",
    "should_succeed": false,
    "expected_error_type": "EmptyQuery",
    "expected_error_message": null,
    "expected_problematic_tokens": []
  }
] 